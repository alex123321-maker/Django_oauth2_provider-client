"""
Django settings for client_project project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from loguru import logger
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-co_2e8=uoxw$qp=w$g&*4*3j=2w5dt1!&h@t^ib+lxt_!xtdmz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'oauth2_provider',
    'corsheaders',
    'rest_framework',
    'drf_yasg',

    "client_app",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


ROOT_URLCONF = 'client_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'client_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = str(BASE_DIR) + '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',

    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}
AUTHENTICATION_BACKENDS = [
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend',
    
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ORIGIN_ALLOW_ALL = True


#superuser: root, root

#OAUTH2_CLIENT_ID  = 'JK6JniqdmX8wq9237o9yUr8bvdP0t2S4eo4xXBIX' # public client
OAUTH2_CLIENT_ID  = 'NxxMAmnxojRa2TudrDoKFN0IWARlenPoqSiHkByG' # confidentionl client
OAUTH2_CLIENT_SECRET  = 'ageAK1kLM2q1oW95TMlUysYq7FOtF8GqW4q2euCkQwxfQOybIC0L5EndsC4aTuQxODeiWubLU1maUDbge91hEBmIEp4gdBeCl5WvrjHCV50ZjKxr0SLdwp4QgsCTJCkv'
OAUTH2_REDIRECT_URI = 'http://127.0.0.2:8000/oauth2/callback/'
OAUTH2_PROVIDER_URL = 'http://127.0.0.1:8000/o/'
OAUTH2_REDIRECT_URL = OAUTH2_REDIRECT_URI
OAUTH2_PROVIDER = {
    
    'RESOURCE_SERVER_INTROSPECTION_URL': f'{OAUTH2_PROVIDER_URL}introspect/',
    'RESOURCE_SERVER_INTROSPECTION_CREDENTIALS': (OAUTH2_CLIENT_ID,OAUTH2_CLIENT_SECRET),
    
}

SWAGGER_SETTINGS = {

    
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    }
}
if not DEBUG:
    logger.remove()
    
logger.add("log/file_info.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="INFO", filter=lambda record: record["level"].name == "INFO", rotation="10 MB", retention="30 days")
logger.add("log/file_error.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="ERROR", diagnose=True, enqueue=True, rotation="10 MB", retention="90 days")
logger.add("log/file_success.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="SUCCESS", filter=lambda record: record["level"].name == "SUCCESS", diagnose=True, enqueue=True, rotation="10 MB", retention="90 days")
logger.add("log/file_debug.log", format="{time:DD.MM.YY} - {time:HH:mm:ss} | {file}:{function}:{line} {level} {message}", level="DEBUG", filter=lambda record: record["level"].name == "DEBUG", diagnose=True, enqueue=True, rotation="10 MB", retention="10 days")
logger.add(sys.stderr, format = "{time:HH:mm:ss} <red>[{level}]</red> {file}:{function}:{line}: <green>{message}</green>", filter=lambda record: record["level"].name == "DEBUG", colorize=True)
